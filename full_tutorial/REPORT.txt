Rapport du tutoriel

https://knpuniversity.com/screencast/symfony



> composer self-update
> cd C:\Users\Pierre\dev\perso\exercicesSymfony
> composer create-project symfony/skeleton full_tutorial

download phpstorm

> cd full_tutorial
> composer require server
> php bin/console server:run
list available commands of 'console' php file
> php bin/console

Dans PS File/Settings/plugins: browse repo; look for symfony => install symfony plugins and php toolbox & annotations

Implémentations du controller de base

> composer require sec-checker
> php bin/console security:check
> composer require twig
Implémentation du template base et du fichier avec le contenu

> composer require profiler --dev

> composer require debug --dev

Pour dumper une valeur depuis le php -> dump($markdown);die;
Dans le twig {{ dump() }} permet d'afficher toutes les variables reçu par le script

Commande pour transformer la dépendance debug en plusieurs dépendances
> composer unpack debug

Dans phpstorm, les préférences symfony, changer web directory de web à public=> permet l'autocomplétion des assets


> composer require asset

Ajout d'un appel ajax pour mettre à jour la ui sans recharger la page!

> php bin/console debug:autowiring																								/_!_\ IMPORTANT  ВАЖНО  هام
> php bin/console debug:container (affiche tous les services que l'on type-hinter)



*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************

https://knpuniversity.com/screencast/symfony-fundamentals

Commandesuivante pour ajouter un nouevau bundle qui permet d'utiliser le service markdown
> composer require knplabs/knp-markdown-bundle

Utilisation du cache

> php bin/console config:dump KnpMarkdownBundle
Permet de voir la configuration du bundle

Création d'un nouveau fichier de configuration config/packages/knp_markdown.yaml
> php bin/console cache:clear
Parceque symfony ne détecte pas le nouveau fichier (à exécuter à chaque que l'on copie un nouveau fichier quelque part)


> php bin/console debug:container --show-private
Affiche TOUS les services disponibles (plus précis que debug:autowiring)
		
> php bin/console config:dump FrameworkBundle 																					/_!_\ IMPORTANT  ВАЖНО  هام
pareil que
> php bin/console config:dump framework
Bien pour voir un fichier d'exemple avec tout les champs possibles

> php bin/console debug:config framework
Affiche la configuration courante

TIP
	Fun fact! Running 
	>./bin/console cache:clear
	clears Symfony's internal cache that helps your app run. But, it purposely does not clear anything that you store in cache. If you want to clear that, run 
	>./bin/console cache:pool:clear cache.app
.
Changement de cache adapter -> app: cache.adapter.apcu
ERREUR: APCu is not enabled
Téléchargement de l'extension (DLL) https://pecl.php.net/package/APCu
Copie du .dll et modification du php.ini + relancer le serveur => it works


Déploiement
Set .env APP_ENV var to prod
> php bin/console cache:clear
> php bin/console cache:warmup
pour charger tous les fichiers cache essentiels => accelère le 1er chargement.
Il vaut mieux exécuter cette commande lors du déploiement (deploy)

Pour utiliser un cache system uniqueement en dev, il faut créer un framework.yaml dans config/packages/dev/
framework:
    cache:
        app: cache.adapter.filesystem
.

More about service
> php bin/console debug:container monolog.logger

Crée config/packages/monolog.yaml pour créer une nouvelle channel
et > php bin/console cache:clear
> php bin/console debug:container log
pour vérifier que monolog.logger.markdown est apparu
ajoute une nouvelle clé dans dev/monolog.yaml et dans services.yaml


> php bin/console debug:container --parameters
Permet d'afficher toutes les paramètres

slack service installation -> https://knpuniversity.com/screencast/symfony-fundamentals/slack-legacy-bundles#play
composer require nexylan/slack-bundle php-http/guzzle6-adapter
ALors, configurer les nexy_slack endpoint
Autowiring alias (-> Ajouter Nexy\Slack\Client: '@nexy_slack.client' dans services.yaml -> bind)
dans services.yaml: nouvelle racine 'services' et ajouter Nexy\Slack\Client

see all environnement variables
> php bin/console about
Copier le contenu de .env dans .env.dist, ce dernier étant commité, il faut retirer les parties sensibles. Ce fichier n'est pas lu par symfony, ce n'est qu'un template

pour le déploiement https://knpuniversity.com/screencast/symfony-fundamentals/env-vars-tricks-production


> composer require maker --dev
=> nouvelle commandes console
> php bin/console make:command
user:stats => SUCCESS
> php bin/console article:stats



*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


https://knpuniversity.com/screencast/symfony-doctrine

> composer require doctrine
modifie les valeurs de .env
> php bin/console doctrine:database:create
> php bin/console make:entity
Création de l'entité. Re-run pour compléter l'entité
> php bin/console make:migration
> php bin/console doctrine:migrations:migrate
On deploy: exécuter la même commande. La base en prod a son propre système de migration
Modifier une entité puis
> php bin/console doctrine:migrations:diff
> php bin/console doctrine:migrations:migrate

> php bin/console doctrine:query:sql "SELECT * FROM user"

> php bin/console make:twig-extension
Garder le nom par défaut de l'extension puisque knp conseille de n'avoir qu'une seule classe qui gère toutes les extension
> composer require knplabs/knp-time-bundle
Permet un affichage de la date avec 'ago'


Modification d'une entité + génération du fichier de migration + migration + suppression du contenu existant
> php bin/console make:entity
> php bin/console make:migration
> php bin/console doctrine:migrations:migrate
> php bin/console doctrine:query:sql "TRUNCATE TABLE user"





*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


Exercice perso: Comment gérer la relation (User 1<--* Comment)
cf. : https://symfony.com/doc/current/doctrine/associations.html
http://sql.sh/cours/jointures


https://stackoverflow.com/questions/12493865/what-is-the-difference-between-inversedby-and-mappedby
-->	the class that would have the foreignkey_id is the one that needs to have inversedBy
-> optimization purpose
https://www.doctrine-project.org/projects/doctrine-orm/en/latest/reference/unitofwork-associations.html

Création d'une association via ligne commande 
> php bin/console make:entity User

 Your entity already exists! So let's add some new fields!

 New property name (press <return> to stop adding fields):
 > comments

 Field type (enter ? to see all types) [string]:
 > relation

 What class should this entity be related to?:
 > Comment

What type of relationship is this?
 ------------ --------------------------------------------------------------
  Type         Description
 ------------ --------------------------------------------------------------
  ManyToOne    Each User relates to (has) one Comment.
               Each Comment can relate/has to (have) many User objects

  OneToMany    Each User relates can relate to (have) many Comment objects.
               Each Comment relates to (has) one User

  ManyToMany   Each User relates can relate to (have) many Comment objects.
               Each Comment can also relate to (have) many User objects

  OneToOne     Each User relates to (has) exactly one Comment.
               Each Comment also relates to (has) exactly one User.
 ------------ --------------------------------------------------------------

 Relation type? [ManyToOne, OneToMany, ManyToMany, OneToOne]:
 > OneToMany

 A new property will also be added to the Comment class so that you can access and set the related User object from it.

 New field name inside Comment [user]:
 > user

 Is the Comment.user property allowed to be null (nullable)? (yes/no) [yes]:
 > no

 Do you want to activate orphanRemoval on your relationship?
 A Comment is "orphaned" when it is removed from its related User.
 e.g. $user->removeComment($comment)

 NOTE: If a Comment may *change* from one User to another, answer "no".

 Do you want to automatically delete orphaned App\Entity\Comment objects (orphanRemoval)? (yes/no) [no]:
 > yes

 updated: src/Entity/User.php
 updated: src/Entity/Comment.php
 

> php bin/console doctrine:query:sql "TRUNCATE TABLE user"
ERROR ->  Cannot truncate a table referenced in a foreign key constraint (cf. : https://stackoverflow.com/questions/253849/cannot-truncate-table-because-it-is-being-referenced-by-a-foreign-key-constraint)
> php bin/console doctrine:query:sql "DELETE FROM user"

*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************







*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


https://knpuniversity.com/screencast/twig




*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


https://knpuniversity.com/screencast/symfony-forms




*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


https://knpuniversity.com/screencast/symfony-security


> composer require security
Pour que l'entité user puisse implémenter UserInterface
> php bin/console make:controller SecurityController
> composer require form validator (-> in order to have the ability to use the makee:form command)

> php bin/console make:auth

https://symfony.com/doc/current/security/guard_authentication.html


Doesn't work, stop here --> https://knpuniversity.com/screencast/symfony-security/authenticator-get-user-check-credentials























