Rapport du tutoriel

tuto url: https://knpuniversity.com/screencast/symfony
next tutotials
https://knpuniversity.com/screencast/symfony-fundamentals
https://knpuniversity.com/screencast/symfony-security
https://knpuniversity.com/screencast/twig

> composer self-update
> cd C:\Users\Pierre\dev\perso\exercicesSymfony
> composer create-project symfony/skeleton full_tutorial

download phpstorm

> cd full_tutorial
> composer require server
> php bin/console server:run
list available commands of 'console' php file
> php bin/console

Dans PS File/Settings/plugins: browse repo; look for symfony => install symfony plugins and php toolbox & annotations

Implémentations du controller de base

> composer require sec-checker
> php bin/console security:check
> composer require twig
Implémentation du template base et du fichier avec le contenu

> composer require profiler --dev

> composer require debug --dev

Pour dumper une valeur depuis le php -> dump($markdown);die;
Dans le twig {{ dump() }} permet d'afficher toutes les variables reçu par le script

Commande pour transformer la dépendance debug en plusieurs dépendances
> composer unpack debug

Dans phpstorm, les préférences symfony, changer web directory de web à public=> permet l'autocomplétion des assets


> composer require asset

Ajout d'un appel ajax pour mettre à jour la ui sans recharger la page!

> php bin/console debug:autowiring																								/_!_\ IMPORTANT  ВАЖНО  هام



*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************

https://knpuniversity.com/screencast/symfony-fundamentals

Commandesuivante pour ajouter un nouevau bundle qui permet d'utiliser le service markdown
> composer require knplabs/knp-markdown-bundle

Utilisation du cache

> php bin/console config:dump KnpMarkdownBundle
Permet de voir la configuration du bundle

Création d'un nouveau fichier de configuration config/packages/knp_markdown.yaml
> php bin/console cache:clear
Parceque symfony ne détecte pas le nouveau fichier (à exécuter à chaque que l'on copie un nouveau fichier quelque part)


> php bin/console debug:container --show-private
Affiche TOUS les services disponibles (plus précis que debug:autowiring)
		
> php bin/console config:dump FrameworkBundle 																					/_!_\ IMPORTANT  ВАЖНО  هام
pareil que
> php bin/console config:dump framework
Bien pour voir un fichier d'exemple avec tout les champs possibles

> php bin/console debug:config framework
Affiche la configuration courante

TIP
	Fun fact! Running 
	>./bin/console cache:clear
	clears Symfony's internal cache that helps your app run. But, it purposely does not clear anything that you store in cache. If you want to clear that, run 
	>./bin/console cache:pool:clear cache.app
.
Changement de cache adapter -> app: cache.adapter.apcu
ERREUR: APCu is not enabled
Téléchargement de l'extension (DLL) https://pecl.php.net/package/APCu
Copie du .dll et modification du php.ini + relancer le serveur => it works


Déploiement
Set .env APP_ENV var to prod
> php bin/console cache:clear
> php bin/console cache:warmup
pour charger tous les fichiers cache essentiels => accelère le 1er chargement.
Il vaut mieux exécuter cette commande lors du déploiement (deploy)

Pour utiliser un cache system uniqueement en dev, il faut créer un framework.yaml dans config/packages/dev/
framework:
    cache:
        app: cache.adapter.filesystem
.

More about service
> php bin/console debug:container monolog.logger

Crée config/packages/monolog.yaml pour créer une nouvelle channel
et > php bin/console cache:clear
> php bin/console debug:container log
pour vérifier que monolog.logger.markdown est apparu
ajoute une nouvelle clé dans dev/monolog.yaml et dans services.yaml


> php bin/console debug:container --parameters
Permet d'afficher toutes les paramètres

slack service installation -> https://knpuniversity.com/screencast/symfony-fundamentals/slack-legacy-bundles#play
composer require nexylan/slack-bundle php-http/guzzle6-adapter
ALors, configurer les nexy_slack endpoint
Autowiring alias (-> Ajouter Nexy\Slack\Client: '@nexy_slack.client' dans services.yaml -> bind)
dans services.yaml: nouvelle racine 'services' et ajouter Nexy\Slack\Client

see all environnement variables
> php bin/console about
Copier le contenu de .env dans .env.dist, ce dernier étant commité, il faut retirer les parties sensibles. Ce fichier n'est pas lu par symfony, ce n'est qu'un template

pour le déploiement https://knpuniversity.com/screencast/symfony-fundamentals/env-vars-tricks-production


> composer require maker --dev
=> nouvelle commandes console
> php bin/console make:command
user:stats => SUCCESS
> php bin/console article:stats



*************************************************************************************************************************
********************************************************** SUITE ********************************************************
*************************************************************************************************************************


https://knpuniversity.com/screencast/symfony-doctrine

> composer require doctrine
modifie les valeurs de .env
> php bin/console doctrine:database:create
> php bin/console make:entity
Création de l'entité. Re-run pour compléter l'entité
> php bin/console make:migration
> php bin/console doctrine:migrations:migrate
On deploy: exécuter la même commande. La base en prod a son propre système de migration
Modifier une entité puis
> php bin/console doctrine:migrations:diff
> php bin/console doctrine:migrations:migrate

> php bin/console doctrine:query:sql "SELECT * FROM user"

> php bin/console make:twig-extension
Garder le nom par défaut puisque knp conseillle de n'avoir qu'une seule classe qui gère toutes les extension
> composer require knplabs/knp-time-bundle







































